# prepare windows
menu main on
menu main move 450 641
menu graphics move 929 115
display resize 470 500
display reposition 450 930
display projection orthographic
display nearclip set 0
display depthcue off
axes location off
color Display Background white

# assign keys

user add key v { pov $fname }
user add key q { exit }
user add key Control-w { savexyz [atomselect top all] vmd.xyz }

# automate povray

render options POV3 {povray +W%w +H%h -I%s -O%s.png +D +X +A +UA +FN}

proc pov {fname} {
  set tmp [file rootname $fname]
  set i 0
  set tmp2 $tmp
  while { [file exists $tmp.pov] } {
    set i [expr $i+1]
    set tmp $tmp2$i
  }
  puts_red "INFO) Writing $tmp.pov"
  render POV3 $tmp.pov [render options POV3]
  file rename  $tmp.pov.png $tmp.png
  puts_red "INFO) Image file saved to $tmp.png"
}

proc puts_red {string} {
  puts stdout "\033\[31m$string\033\[0m"
}

# putting these things in a proc gets rid of unnecessary output!
proc initial_settings {molid} {
  global fname
  if { [lsearch [molinfo list] $molid] > -1 } {
    set fname [molinfo top get filename]
    if {[file pathtype $fname] == "relative"} {
      set fname [pwd]/$fname
    }
    # do not cd into /tmp
    if {![string match "/tmp/*" $fname]} {
      cd [file dirname $fname]
    }
    # load my scripts in this order!
    state $molid
    cell $molid
  }
  return ""
}

proc clean_tmp_files {args} {
  file delete -force /tmp/vmd_auto.xyz
  file delete -force /tmp/vmd_auto.pdb
  return ""
}

proc initialize_settings_proxy {args} {
  foreach {dummy molid dummy2} $args {}
  eval "after idle {initial_settings $molid}"
}

after idle {
  package require pbctools
  set auto_path [concat $env(HOME)/.vmd $auto_path]
  if {$argc > 0} { eval $argv }
  initial_settings 0
  trace variable vmd_trajectory_read w initialize_settings_proxy
  trace variable vmd_quit w clean_tmp_files
}

# vim: ft=tcl
