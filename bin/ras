#!/bin/bash
# set -x

type=1
ras_opt=0
if [[ $# == 0 ]]; then
  echo "-d      output the command, not execute"
  echo "-fs     use filesystem server from server settings"
  echo "-pbs    use computation server from server settings"
  echo "-o Opt  pass options to ssh command"
  echo "        All other switches [-.*] before the actual command will"
  echo "        also be passed to ssh command"
  echo "-s      specify servername manually"
fi

while [[ $# > 0 ]];do
  if [[ $ras_opt == 0 ]]; then
    if [[ $1 == "-fs" ]]; then
      shift
    elif [[ $1 == "-pbs" ]]; then
      type=2
      shift
    elif [[ $1 == "-d" ]]; then
      debug=1
      shift
    elif [[ $1 == "-s" ]]; then
      shift
      server=$1
      shift
    elif [[ $1 == -o ]]; then
      shift
      o="${o} -o ${1}"
      shift
    elif [[ $1 == -?* ]]; then
      o="${o} ${1}"
      shift
    else
      ras_opt=1
      cmd=$1
      shift
    fi
  else
    arg="${arg}'${1}' " #echo $1|sed "/ /s/\(.*\)/'\1'/;s/\([();\\]\)/\\\\\1/g")" "
    shift
  fi
done
if tmp=`grep "^${server:=$PBSSERVER} " $PBSSERVERFILE`; then
  read -a settings <<< $tmp
  real_server=${settings[$type]}
  folder=${settings[3]}
  if [[ $PBSSERVER == "" ]]; then
    if [[ $debug == 1 ]]; then
      echo "ssh -q${o} ${real_server} \"${cmd} ${arg}\""
    else
      ssh -q${o} ${real_server} "${cmd} ${arg}"
    fi
  else
    if [[ $debug == 1 ]]; then
      echo "ssh -q${o} ${real_server} \"cd ${folder}${PWD#$HOME/$PBSSERVER}; ${cmd} ${arg}\""
    else
      ssh -q${o} ${real_server} "cd ${folder}${PWD#$HOME/$PBSSERVER} 2>/dev/null; ${cmd} ${arg}"
    fi
  fi
else
  if [[ $debug == 1 ]]; then
    echo "${cmd} ${arg}"
  else
    if type ${cmd} &>/dev/null; then
      eval "\\${cmd} ${arg}"
    else
      echo "Command ${cmd} not found locally."
    fi
  fi
fi
