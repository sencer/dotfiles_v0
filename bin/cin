#!/bin/bash

if [[ -z $PBSSERVER ]]; then
  fout="$(basename $PWD)".txt

  # get where the last run starts
  n=( $(grep -n starts output.txt|cut -d':' -f1) )

  # check if ions converged after last run
  c=( $(grep -n 'Begin final' output.txt|cut -d':' -f1) )

  if [[ -n $c && ${n[${#n[@]}-1]} < ${c[${#c[@]}-1]} ]]; then
    c=1
    echo "Using the converged ionic positions."
  else
    echo "Using the ionic positions from the last iteration."
  fi

  # get the last ATOMIC_POSITIONS flag
  f=( $(grep -n 'ATOMIC_POSITIONS' output.txt|cut -d':' -f1) )

  sed -n -e '1,/_POS/{:c s/angstrom/CRYSTAL/i; /_POS/t c;p}' input.txt > $fout

  awk -vn=${n[${#n[@]}-1]} -vc=$c -vf=${f[${#f[@]}-1]} 'BEGIN{
        b2a = 0.529177249
        i = 0
        parse = (c ? 0 : 1)
        IGNORECASE = 1
      }
      NR > n {
        if($1 == "celldm(1)="){
          a = $2 * b2a
          b = $4 * a
          c = $6 * a
        } else if ($0 ~ /number of atoms/){
          nat = $5
        } else if($0 ~ /Begin final/){
          parse = 1
        } else if(parse == 1 && $0 ~ /ATOMIC_POSITIONS/ ){
          parse = 2
          flag = $2 ~ /crystal/ ? 0 : 1
        } else if(parse == 2 && i < nat){
          if(flag){
            x = $2 / a
            y = $3 / b
            z = $4 / c
          } else {
            x = $2
            y = $3
            z = $4
          }
          printf "  %-5s %14.10f %14.10f %14.10f",  $1, x, y, z
          if(NF == 7){
            printf "  %d %d %d", $5, $6, $7
          }
          printf "\n"
          i += 1
        }
      }' output.txt >> $fout

  sed -n -e '/K_POINTS/,$p' input.txt >> $fout
  echo "Written to $fout"
else
  ras -pbs '~/bin/cin'
fi
