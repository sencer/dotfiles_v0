#!/bin/bash
if [[ -z $PBS_SERVER ]]; then
  if [[ $# == 0 ]]; then
    echo "usage: zpe atom1 atom2..."
    echo
    echo "Atomic coordinates in the original input file"
    echo "must be listed in Angstroms."
    exit
  fi
  n=$#
  all=( $@ )
  inp=`basename $PWD`.txt
  if [[ ! -f $inp ]]; then
    echo 'First you should generate a pwscf input file using `pin`'
    exit -1
  fi
  mkdir -p zpe
  cp $inp zpe/input.txt
  cd zpe
  header="&control
  restart_mode  = 'from_scratch'
  max_seconds   = 10000
  tprnfor       = .TRUE.
/
$(sed -n "/&system/,/_POS/p;/&electrons/a\  startingwfc = 'file'\n\
  startingpot = 'file'" input.txt)"

  for i in ${all[@]}; do
    if [[ -d $i ]]; then
      echo "There is already a folder for atom $i. Backing up the input file"
      echo "and creating a new one. You may want to omit recalculating by"
      echo "editing the job script."
    fi
    for j in {1..6}; do
      mkdir -p $i/$j
      [[ -f $i/$j/input.txt ]] && mv $i/$j/input.txt $i/$j/old.input.txt
      echo "${header}" > $i/$j/input.txt
      awk -va=$1 -vj=$j 'BEGIN{
        x = y = z = 0
        (j < 3) ? x = 1 : ((j < 5) ? y = 1 : z = 1)
        if(j % 2 == 1) { x = -x; y = -y; z = -z}
      } l > 0 {
        if (NR == l + a){
          printf "  %-4s  %14.10f %14.10f %14.10f\n", $1, $2 + 0.01 * x,\
                                                          $3 + 0.01 * y,\
                                                          $4 + 0.01 * z
          i++
        } else {
        print $0
        }
      } $0 ~ /ATOMIC_POSITIONS/ {
        l = NR
      }' input.txt >> $i/$j/input.txt
    done
    shift
  done

  {
    cat $HOME/$PBS_SERVER/.jobtemplate
    cat <<-'EOF'
		path=%path%
		gap=1
		kpools=300
		images=1
	
		numprocs=%numprocs%
		maxseconds=$(grep -P -o "\\d+:\\d+:\\d+" %jobname% | sed "s/:/*3600+/;s/:/*60-$gap+/"|bc)
		dt=$(date +%s)
		for i in %all%; do
		  for j in {1..6};do
		    if [[ $((maxseconds+dt)) -gt $(date +%s) ]]; then
		      cd %jobdir%/$i/$j
		      cp -r %jobdir%/../pwscf.* .
		      sed -i "s/\\(max_seconds\\s*=\\s*\\)[0-9]*/\\1$((maxseconds+dt-$(date +%s)))/" input.txt
		      %scheduler% %prepara% $path/pw.x -npool $kpools -nimages $images -inp input.txt >> output.txt
		      rm -rf pwscf.*
		    fi
		    echo $i/$j: $((dt-$(date +%s)))
		  done
		done
		EOF
	} | templr $HOME/$PBS_SERVER/.jobconfig -if -all "${all[*]}" > $(basename ${PWD%/*})-zpe.job
else
  ras "~/bin/zpe $@"
fi
