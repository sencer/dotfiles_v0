#!/bin/bash
# set -x
## uses zsh chpwd hook to determine $SERVER
escape(){
  arg="$@"
  #why not in general?
  # ?arg="${arg/\*/\\*}"
  for i in \( \) \;;do  # \; makes find work, messes with for
    arg="${arg//$i/\\$i}"
  done
  echo "$arg"
}
type=1
while [[ $# -gt 0 ]]; do
  if [[ $1 == "-fs" ]]; then
    shift
  elif [[ $1 == "-pbs" ]]; then
    type=2
    shift
  elif [[ $1 == "-s" ]]; then
    shift
    server=$1
    shift
  elif [[ $1 == -o?* ]]; then
    o=${o}${1#-o}
    shift
  elif [[ $1 == -o ]]; then
    shift
    o=${o}${1}
    shift
  elif [[ $1 == "-t" ]]; then
    shift
    o=${o}t
  # elif [[ $command == "" ]]; then
  #   command="$1"
  #   shift
  # else
  #   arg="$arg $1"
  #   shift
  else
    break
  fi
done
command="$(escape "$@")"
if tmp=`grep "^${server:$SERVER}" $PBS_SERVER_FILE`; then
  read -a settings <<< $tmp
  real_server=${settings[$type]}
  folder=${settings[3]}
fi

if [[ $SERVER == ${server:-$SERVER} ]]; then
  if [[ $SERVER == "" ]];then
    # echo "Trying to run locally..." >&2
      eval "\\$command"  #2>/dev/null ||
      #echo -e "$(tput cuu1)`basename $command` not found in PATH.    "
  else
    ssh -q$o $SERVER "cd $folder${PWD#$HOME/$SERVER}; ${command}"
  fi
else
  ssh -q$o ${server} "${command}"
fi

