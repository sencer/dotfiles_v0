#!/bin/bash

if [[ -z $PBSSERVER ]]; then
  if [[ -f output.txt ]]; then
    filout="output.txt"
    filin="input.txt"
  elif [[ -f PW.out ]]; then
    filout="PW.out"
    filin="../input.txt"
  else
    echo "No output file was found. Exiting."
    exit -1
  fi
  fout="$(basename $PWD)".txt

  # get where the last run starts
  n=( $(grep -n starts $filout|cut -d':' -f1) )

  # get the last ATOMIC_POSITIONS flag
  f=( $(grep -n 'ATOMIC_POSITIONS' $filout|cut -d':' -f1) )

  if [[ -z $f ]];then
    echo "No atomic coordinates are found in the output file. Exiting"
    exit -1
  else
    if [[ ${n[${#n[@]}-1]} > ${f[${#f[@]}-1]} ]]; then
      echo "No atomic positions are found in the last run, using from the previous."
      n=${n[${#n[@]}-2]}
    else
      n=${n[${#n[@]}-1]}
    fi
  fi

  sed -n -e '1,/_POS/{:c s/crystal/ANGSTROM/i; /_POS/t c;p}' $filin > $fout

  awk -vn=$n -vf=${f[${#f[@]}-1]} 'BEGIN{
        b2a = 0.529177249
        i = 0
        IGNORECASE = 1
      }
      NR > n {
        if($1 == "bravais-lattice"){
          ibrav = $4
        } else if($1 == "celldm(1)="){
          a = $2 * b2a
          b = $4 * a
          c = $6 * a
          if(ibrav == 1){
            b = a
            c = a
          }
        } else if ($0 ~ /number of atoms/){
          nat = $5
        } else if($0 ~ /Begin final/ || NR == f){
          if (NR == f)
            printf "Using the last known positions (%d)\n", NR> "/dev/stderr"
          else
            printf "Using converged ionic positions (%d)\n", NR > "/dev/stderr"
          while ( $0 !~ /ATOMIC_POSITIONS/ )
            getline
          flag = $2 ~ /angstrom/ ? 0 : 1
          parse = 1
        } else if(parse == 1){
          for(i = 0; i < nat; i++){
            if(flag){
              printf "  %-5s %14.10f %14.10f %14.10f",  $1, $2 * a, $3 * b, $4 * c
            } else {
              printf "  %-5s %14.10f %14.10f %14.10f",  $1, $2, $3, $4
            }
            if(NF == 7){
              printf "  %d %d %d", $5, $6, $7
            }
            printf "\n"
            getline
          }
          exit
        }
      }' $filout >> $fout

  sed -n -e '/K_POINTS/,$p' $filin >> $fout
  echo "Written to $fout"
else
  ras -pbs '~/bin/pin'
fi
